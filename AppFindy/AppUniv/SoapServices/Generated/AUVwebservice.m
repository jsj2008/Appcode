/*
	AUVwebservice.m
	The implementation classes and methods for the webservice web service.
	Generated by SudzC.com
*/

#import "AUVwebservice.h"
				
#import "Soap.h"
	

/* Implementation of the service */
				
@implementation AUVwebservice

	- (id) init
	{
		if(self = [super init])
		{
			self.serviceUrl = @"http://appfindee.com/appsnatch/index.php/webservice";
			self.namespace  = @"http://appfindee.com/appsnatch/index.php/webservice";
			self.headers = nil;
			self.logging = NO;
		}
		return self;
	}
	
	- (id) initWithUsername: (NSString*) username andPassword: (NSString*) password {
		if(self = [super initWithUsername:username andPassword:password]) {
		}
		return self;
	}
	
	+ (AUVwebservice*) service {
		return [AUVwebservice serviceWithUsername:nil andPassword:nil];
	}
	
	+ (AUVwebservice*) serviceWithUsername: (NSString*) username andPassword: (NSString*) password {
		return [[AUVwebservice alloc] initWithUsername:username andPassword:password];
	}

		
	/* Returns AUVArray*. To Store My Apps Details */
	- (SoapRequest*) myapps: (id <SoapDelegate>) handler user_id: (NSString*) user_id app_id: (NSString*) app_id type: (NSString*) type
	{
		return [self myapps: handler action: nil user_id: user_id app_id: app_id type: type];
	}

	- (SoapRequest*) myapps: (id) _target action: (SEL) _action user_id: (NSString*) user_id app_id: (NSString*) app_id type: (NSString*) type
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: app_id forName: @"app_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: type forName: @"type"]];
		NSString* _envelope = [Soap createEnvelope: @"myapps" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#myapps" postData: _envelope deserializeTo: [AUVArray alloc]];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. To get a App details from Hypertable. 
	- (SoapRequest*) get_appdetails: (id <SoapDelegate>) handler appid: (NSString*) appid user_id: (NSString*) user_id
	{
		return [self get_appdetails: handler action: nil appid: appid user_id: user_id];
	}

	- (SoapRequest*) get_appdetails: (id) _target action: (SEL) _action appid: (NSString*) appid user_id: (NSString*) user_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: appid forName: @"appid"]];
	//	[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		NSString* _envelope = [Soap createEnvelope: @"get_appdetails" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#get_appdetails" postData: _envelope deserializeTo: [AUVArray alloc]];
		[_request send];
		return _request;
	}
*/
	
	/* Returns AUVArray*. Get Country Details */
	- (SoapRequest*) get_country: (id <SoapDelegate>) handler
	{
		return [self get_country: handler action: nil];
	}

	- (SoapRequest*) get_country: (id) _target action: (SEL) _action
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		NSString* _envelope = [Soap createEnvelope: @"get_country" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#get_country" postData: _envelope deserializeTo: [AUVArray alloc]];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. Facebook Username Update */
	- (SoapRequest*) facebook_username_update: (id <SoapDelegate>) handler user_id: (NSString*) user_id username: (NSString*) username password: (NSString*) password
	{
		return [self facebook_username_update: handler action: nil user_id: user_id username: username password: password];
	}

	- (SoapRequest*) facebook_username_update: (id) _target action: (SEL) _action user_id: (NSString*) user_id username: (NSString*) username password: (NSString*) password
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: username forName: @"username"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: password forName: @"password"] ];
		NSString* _envelope = [Soap createEnvelope: @"facebook_username_update" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#facebook_username_update" postData: _envelope deserializeTo: [AUVArray alloc]];
		[_request send];
		return _request;
	}

	
	/* Returns AUVArray*. Search Database Users */
	- (SoapRequest*) search_user: (id <SoapDelegate>) handler user_id: (NSString*) user_id search_term: (NSString*) search_term
	{
		return [self search_user: handler action: nil user_id: user_id search_term: search_term];
	}

	- (SoapRequest*) search_user: (id) _target action: (SEL) _action user_id: (NSString*) user_id search_term: (NSString*) search_term
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id" ]];
		[_params addObject: [[SoapParameter alloc] initWithValue: search_term forName: @"search_term"] ];
		NSString* _envelope = [Soap createEnvelope: @"search_user" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#search_user" postData: _envelope deserializeTo: [AUVArray alloc]];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. Suggest Friends */
	- (SoapRequest*) suggest_friends: (id <SoapDelegate>) handler user_id: (NSString*) user_id limit:(NSString*)limit offset:(NSString*)offset
	{
		return [self suggest_friends: handler action: nil user_id: user_id limit:limit offset:offset];
	}

	- (SoapRequest*) suggest_friends: (id) _target action: (SEL) _action user_id: (NSString*) user_id limit:(NSString*)limit offset:(NSString*)offset
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
            [_params addObject: [[SoapParameter alloc] initWithValue: limit forName: @"limit"] ];
            [_params addObject: [[SoapParameter alloc] initWithValue: offset forName: @"offset"] ];


		NSString* _envelope = [Soap createEnvelope: @"suggest_friends" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#suggest_friends" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. Popular User */
	- (SoapRequest*) popular_user: (id <SoapDelegate>) handler user_id: (NSString*) user_id limit: (NSString*) limit offset: (NSString*) offset
	{
		return [self popular_user: handler action: nil user_id: user_id limit: limit offset: offset];
	}

	- (SoapRequest*) popular_user: (id) _target action: (SEL) _action user_id: (NSString*) user_id limit: (NSString*) limit offset: (NSString*) offset
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: limit forName: @"limit"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: offset forName: @"offset"] ];
		NSString* _envelope = [Soap createEnvelope: @"popular_user" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#popular_user" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. To store User interest categories */
	- (SoapRequest*) user_interest: (id <SoapDelegate>) handler user_id: (NSString*) user_id category_id: (NSString*) category_id
	{
		return [self user_interest: handler action: nil user_id: user_id category_id: category_id];
	}

	- (SoapRequest*) user_interest: (id) _target action: (SEL) _action user_id: (NSString*) user_id category_id: (NSString*) category_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: category_id forName: @"category_id"] ];
		NSString* _envelope = [Soap createEnvelope: @"user_interest" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#user_interest" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. To Updated User interest categories */
	- (SoapRequest*) update_user_interest: (id <SoapDelegate>) handler user_id: (NSString*) user_id category_id: (NSString*) category_id
	{
		return [self update_user_interest: handler action: nil user_id: user_id category_id: category_id];
	}

	- (SoapRequest*) update_user_interest: (id) _target action: (SEL) _action user_id: (NSString*) user_id category_id: (NSString*) category_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: category_id forName: @"category_id"] ];
		NSString* _envelope = [Soap createEnvelope: @"update_user_interest" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#update_user_interest" postData: _envelope deserializeTo: [AUVArray alloc]];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. Follow Users */
	- (SoapRequest*) follow_users: (id <SoapDelegate>) handler user_id: (NSString*) user_id follow_user_id: (NSString*) follow_user_id
	{
		return [self follow_users: handler action: nil user_id: user_id follow_user_id: follow_user_id];
	}

	- (SoapRequest*) follow_users: (id) _target action: (SEL) _action user_id: (NSString*) user_id follow_user_id: (NSString*) follow_user_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: follow_user_id forName: @"follow_user_id"] ];
		NSString* _envelope = [Soap createEnvelope: @"follow_users" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#follow_users" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. Facebook Follow Users */
	- (SoapRequest*) facebook_follow_users: (id <SoapDelegate>) handler user_id: (NSString*) user_id facebook_user_id: (NSString*) facebook_user_id
	{
		return [self facebook_follow_users: handler action: nil user_id: user_id facebook_user_id: facebook_user_id];
	}

	- (SoapRequest*) facebook_follow_users: (id) _target action: (SEL) _action user_id: (NSString*) user_id facebook_user_id: (NSString*) facebook_user_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: facebook_user_id forName: @"facebook_user_id"] ];
		NSString* _envelope = [Soap createEnvelope: @"facebook_follow_users" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#facebook_follow_users" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. Follow App */
	- (SoapRequest*) follow_app: (id <SoapDelegate>) handler user_id: (NSString*) user_id app_id: (NSString*) app_id
	{
		return [self follow_app: handler action: nil user_id: user_id app_id: app_id];
	}

	- (SoapRequest*) follow_app: (id) _target action: (SEL) _action user_id: (NSString*) user_id app_id: (NSString*) app_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: app_id forName: @"app_id"] ];
		NSString* _envelope = [Soap createEnvelope: @"follow_app" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#follow_app" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. Follow Category */
	- (SoapRequest*) follow_category: (id <SoapDelegate>) handler user_id: (NSString*) user_id category_id: (NSString*) category_id
	{
		return [self follow_category: handler action: nil user_id: user_id category_id: category_id];
	}

	- (SoapRequest*) follow_category: (id) _target action: (SEL) _action user_id: (NSString*) user_id category_id: (NSString*) category_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: category_id forName: @"category_id"] ];
		NSString* _envelope = [Soap createEnvelope: @"follow_category" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#follow_category" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. Unfollow Users */
	- (SoapRequest*) unfollow_users: (id <SoapDelegate>) handler user_id: (NSString*) user_id unfollow_user_id: (NSString*) unfollow_user_id
	{
		return [self unfollow_users: handler action: nil user_id: user_id unfollow_user_id: unfollow_user_id];
	}

	- (SoapRequest*) unfollow_users: (id) _target action: (SEL) _action user_id: (NSString*) user_id unfollow_user_id: (NSString*) unfollow_user_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: unfollow_user_id forName: @"unfollow_user_id"] ];
		NSString* _envelope = [Soap createEnvelope: @"unfollow_users" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#unfollow_users" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. Unfollow Question */
	- (SoapRequest*) unfollow_question: (id <SoapDelegate>) handler user_id: (NSString*) user_id question_id: (NSString*) question_id
	{
		return [self unfollow_question: handler action: nil user_id: user_id question_id: question_id];
	}

	- (SoapRequest*) unfollow_question: (id) _target action: (SEL) _action user_id: (NSString*) user_id question_id: (NSString*) question_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: question_id forName: @"question_id"] ];
		NSString* _envelope = [Soap createEnvelope: @"unfollow_question" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#unfollow_question" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. Unfollow Apps */
	- (SoapRequest*) unfollow_app: (id <SoapDelegate>) handler user_id: (NSString*) user_id app_id: (NSString*) app_id
	{
		return [self unfollow_app: handler action: nil user_id: user_id app_id: app_id];
	}

	- (SoapRequest*) unfollow_app: (id) _target action: (SEL) _action user_id: (NSString*) user_id app_id: (NSString*) app_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: app_id forName: @"app_id"] ];
		NSString* _envelope = [Soap createEnvelope: @"unfollow_app" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#unfollow_app" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. Unfollow Category */
	- (SoapRequest*) unfollow_category: (id <SoapDelegate>) handler user_id: (NSString*) user_id category_id: (NSString*) category_id
	{
		return [self unfollow_category: handler action: nil user_id: user_id category_id: category_id];
	}

	- (SoapRequest*) unfollow_category: (id) _target action: (SEL) _action user_id: (NSString*) user_id category_id: (NSString*) category_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: category_id forName: @"category_id"] ];
		NSString* _envelope = [Soap createEnvelope: @"unfollow_category" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#unfollow_category" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. Unfollow Developer */
	- (SoapRequest*) unfollow_developer: (id <SoapDelegate>) handler user_id: (NSString*) user_id developer_id: (NSString*) developer_id
	{
		return [self unfollow_developer: handler action: nil user_id: user_id developer_id: developer_id];
	}

	- (SoapRequest*) unfollow_developer: (id) _target action: (SEL) _action user_id: (NSString*) user_id developer_id: (NSString*) developer_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: developer_id forName: @"developer_id"] ];
		NSString* _envelope = [Soap createEnvelope: @"unfollow_developer" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#unfollow_developer" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. Follow Users */
	- (SoapRequest*) follow_developers: (id <SoapDelegate>) handler user_id: (NSString*) user_id developer_id: (NSString*) developer_id
	{
		return [self follow_developers: handler action: nil user_id: user_id developer_id: developer_id];
	}

	- (SoapRequest*) follow_developers: (id) _target action: (SEL) _action user_id: (NSString*) user_id developer_id: (NSString*) developer_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: developer_id forName: @"developer_id"] ];
		NSString* _envelope = [Soap createEnvelope: @"follow_developers" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#follow_developers" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. App Like */
	- (SoapRequest*) applike: (id <SoapDelegate>) handler user_id: (NSString*) user_id app_id: (NSString*) app_id
	{
		return [self applike: handler action: nil user_id: user_id app_id: app_id];
	}

	- (SoapRequest*) applike: (id) _target action: (SEL) _action user_id: (NSString*) user_id app_id: (NSString*) app_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: app_id forName: @"app_id"] ];
		NSString* _envelope = [Soap createEnvelope: @"applike" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#follow_developers" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. Facebook Authendication */
	- (SoapRequest*) facebook_auth: (id <SoapDelegate>) handler access_key: (NSString*) access_key
	{
		return [self facebook_auth: handler action: nil access_key: access_key];
	}

	- (SoapRequest*) facebook_auth: (id) _target action: (SEL) _action access_key: (NSString*) access_key
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: access_key forName: @"access_key"] ];
		NSString* _envelope = [Soap createEnvelope: @"facebook_auth" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#facebook_auth" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. Twitter Authendication */
	- (SoapRequest*) twitter_auth: (id <SoapDelegate>) handler user_id: (NSString*) user_id auth_key: (NSString*) auth_key secret_key: (NSString*) secret_key
	{
		return [self twitter_auth: handler action: nil user_id: user_id auth_key: auth_key secret_key: secret_key];
	}

	- (SoapRequest*) twitter_auth: (id) _target action: (SEL) _action user_id: (NSString*) user_id auth_key: (NSString*) auth_key secret_key: (NSString*) secret_key
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: auth_key forName: @"auth_key"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: secret_key forName: @"secret_key"] ];
		NSString* _envelope = [Soap createEnvelope: @"twitter_auth" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#twitter_auth" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. Apps Comments */
	- (SoapRequest*) appcomment: (id <SoapDelegate>) handler user_id: (NSString*) user_id app_id: (NSString*) app_id comment: (NSString*) comment
	{
		return [self appcomment: handler action: nil user_id: user_id app_id: app_id comment: comment];
	}

	- (SoapRequest*) appcomment: (id) _target action: (SEL) _action user_id: (NSString*) user_id app_id: (NSString*) app_id comment: (NSString*) comment
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: app_id forName: @"app_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: comment forName: @"comment"] ];
		NSString* _envelope = [Soap createEnvelope: @"appcomment" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#appcomment" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. Get App Comments */
- (SoapRequest*) get_comment: (id <SoapDelegate>) handler app_id: (NSString*) app_id limit: (NSString*) limit offset: (NSString*) offset


{
    return [self get_comment: handler action: nil app_id: app_id limit:limit offset:offset];
	}

	- (SoapRequest*) get_comment: (id) _target action: (SEL) _action app_id: (NSString*) app_id limit: (NSString*) limit offset: (NSString*) offset
		{
		NSMutableArray* _params = [NSMutableArray array];
    
		[_params addObject: [[SoapParameter alloc] initWithValue: app_id forName: @"app_id"] ];
        [_params addObject: [[SoapParameter alloc] initWithValue: limit forName: @"limit"] ];
        [_params addObject: [[SoapParameter alloc] initWithValue: offset forName: @"offset"] ];
		NSString* _envelope = [Soap createEnvelope: @"get_comment" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#get_comment" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. App Rating */
	- (SoapRequest*) apprating: (id <SoapDelegate>) handler user_id: (NSString*) user_id app_id: (NSString*) app_id rating: (NSString*) rating
	{
		return [self apprating: handler action: nil user_id: user_id app_id: app_id rating: rating];
	}

	- (SoapRequest*) apprating: (id) _target action: (SEL) _action user_id: (NSString*) user_id app_id: (NSString*) app_id rating: (NSString*) rating
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: app_id forName: @"app_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: rating forName: @"rating"] ];
		NSString* _envelope = [Soap createEnvelope: @"apprating" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#apprating" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. Change Password */
	- (SoapRequest*) change_password: (id <SoapDelegate>) handler user_id: (NSString*) user_id current_password: (NSString*) current_password new_password: (NSString*) new_password
	{
		return [self change_password: handler action: nil user_id: user_id current_password: current_password new_password: new_password];
	}

	- (SoapRequest*) change_password: (id) _target action: (SEL) _action user_id: (NSString*) user_id current_password: (NSString*) current_password new_password: (NSString*) new_password
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: current_password forName: @"current_password"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: new_password forName: @"new_password"] ];
		NSString* _envelope = [Soap createEnvelope: @"change_password" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#change_password" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. Profile Update - String format : (Age : YYYY-MM-DD) */
	- (SoapRequest*) update_profile: (id <SoapDelegate>) handler user_id: (NSString*) user_id param_name: (NSString*) param_name param_value: (NSString*) param_value
	{
		return [self update_profile: handler action: nil user_id: user_id param_name: param_name param_value: param_value];
	}

	- (SoapRequest*) update_profile: (id) _target action: (SEL) _action user_id: (NSString*) user_id param_name: (NSString*) param_name param_value: (NSString*) param_value
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: param_name forName: @"param_name"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: param_value forName: @"param_value"] ];
		NSString* _envelope = [Soap createEnvelope: @"update_profile" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#update_profile" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. To get user profile */
	- (SoapRequest*) get_user_profile: (id <SoapDelegate>) handler user_id: (NSString*) user_id
	{
		return [self get_user_profile: handler action: nil user_id: user_id];
	}

	- (SoapRequest*) get_user_profile: (id) _target action: (SEL) _action user_id: (NSString*) user_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		NSString* _envelope = [Soap createEnvelope: @"get_user_profile" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#get_user_profile" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. Share Application */
	- (SoapRequest*) share_apps: (id <SoapDelegate>) handler user_id: (NSString*) user_id app_id: (NSString*) app_id message: (NSString*) message
	{
		return [self share_apps: handler action: nil user_id: user_id app_id: app_id message: message];
	}

	- (SoapRequest*) share_apps: (id) _target action: (SEL) _action user_id: (NSString*) user_id app_id: (NSString*) app_id message: (NSString*) message
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: app_id forName: @"app_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: message forName: @"message"] ];
		NSString* _envelope = [Soap createEnvelope: @"share_apps" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#share_apps" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. Wall Application */
- (SoapRequest*) wall: (id <SoapDelegate>) handler user_id: (NSString*) user_id limit:(NSString*)limit offset:(NSString*)offset
	{
		return [self wall: handler action: nil user_id: user_id limit:limit offset:offset];
	}

- (SoapRequest*) wall: (id) _target action: (SEL) _action user_id: (NSString*) user_id limit:(NSString*)limit offset:(NSString*)offset

		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
        [_params addObject: [[SoapParameter alloc] initWithValue: limit forName: @"limit"] ];
        [_params addObject: [[SoapParameter alloc] initWithValue: offset forName: @"offset"] ];
            
		NSString* _envelope = [Soap createEnvelope: @"wall" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#wall" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. To Get All Category List */
	- (SoapRequest*) get_all_category: (id <SoapDelegate>) handler
	{
		return [self get_all_category: handler action: nil];
	}

	- (SoapRequest*) get_all_category: (id) _target action: (SEL) _action
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		NSString* _envelope = [Soap createEnvelope: @"get_all_category" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#get_all_category" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. To Get & Insert Wall Comments */
	- (SoapRequest*) wall_comments: (id <SoapDelegate>) handler user_id: (NSString*) user_id message_id: (NSString*) message_id comment: (NSString*) comment
	{
		return [self wall_comments: handler action: nil user_id: user_id message_id: message_id comment: comment];
	}

	- (SoapRequest*) wall_comments: (id) _target action: (SEL) _action user_id: (NSString*) user_id message_id: (NSString*) message_id comment: (NSString*) comment
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: message_id forName: @"message_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: comment forName: @"comment"] ];
		NSString* _envelope = [Soap createEnvelope: @"wall_comments" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#wall_comments" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. To Add & Get Question */
	- (SoapRequest*) question: (id <SoapDelegate>) handler category_id: (NSString*) category_id app_id: (NSString*) app_id user_id: (NSString*) user_id question: (NSString*) question description:(NSString*) description
	{
		return [self question: handler action: nil category_id: category_id app_id: app_id user_id: user_id question: question description:description];
	}

- (SoapRequest*) question: (id) _target action: (SEL) _action category_id: (NSString*) category_id app_id: (NSString*) app_id user_id: (NSString*) user_id question: (NSString*) question description:(NSString*) description
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: category_id forName: @"category_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: app_id forName: @"app_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: question forName: @"question"] ];
        [_params addObject: [[SoapParameter alloc] initWithValue: description forName: @"description"] ];
		NSString* _envelope = [Soap createEnvelope: @"question" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#question" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. To Add & Get answer */
	- (SoapRequest*) answer: (id <SoapDelegate>) handler question_id: (NSString*) question_id user_id: (NSString*) user_id comment: (NSString*) comment start: (NSString*) start end: (NSString*) end
	{
		return [self answer: handler action: nil question_id: question_id user_id: user_id comment: comment start: start end: end];
	}

	- (SoapRequest*) answer: (id) _target action: (SEL) _action question_id: (NSString*) question_id user_id: (NSString*) user_id comment: (NSString*) comment start: (NSString*) start end: (NSString*) end
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: question_id forName: @"question_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: comment forName: @"comment"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: start forName: @"start"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: end forName: @"end"] ];
		NSString* _envelope = [Soap createEnvelope: @"answer" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#answer" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. To Get Questions With Category id Or App Id */
	- (SoapRequest*) get_question: (id <SoapDelegate>) handler category_id: (NSString*) category_id app_id: (NSString*) app_id user_id: (NSString*) user_id start: (NSString*) start end: (NSString*) end
	{
		return [self get_question: handler action: nil category_id: category_id app_id: app_id user_id: user_id start: start end: end];
	}

	- (SoapRequest*) get_question: (id) _target action: (SEL) _action category_id: (NSString*) category_id app_id: (NSString*) app_id user_id: (NSString*) user_id start: (NSString*) start end: (NSString*) end
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: category_id forName: @"category_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: app_id forName: @"app_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: start forName: @"start"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: end forName: @"end"] ];
		NSString* _envelope = [Soap createEnvelope: @"get_question" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#get_question" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. To Get User Questions  */
	- (SoapRequest*) get_user_question: (id <SoapDelegate>) handler user_id: (NSString*) user_id limit: (NSString*) limit offset: (NSString*) offset
	{
		return [self get_user_question: handler action: nil user_id: user_id limit: limit offset: offset];
	}

	- (SoapRequest*) get_user_question: (id) _target action: (SEL) _action user_id: (NSString*) user_id limit: (NSString*) limit offset: (NSString*) offset
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: limit forName: @"limit"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: offset forName: @"offset"] ];
		NSString* _envelope = [Soap createEnvelope: @"get_user_question" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#get_user_question" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. To Get Single Questions & Answers */
	- (SoapRequest*) get_single_question: (id <SoapDelegate>) handler question_id: (NSString*) question_id start: (NSString*) start end: (NSString*) end
	{
		return [self get_single_question: handler action: nil question_id: question_id start: start end: end];
	}

	- (SoapRequest*) get_single_question: (id) _target action: (SEL) _action question_id: (NSString*) question_id start: (NSString*) start end: (NSString*) end
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: question_id forName: @"question_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: start forName: @"start"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: end forName: @"end"] ];
		NSString* _envelope = [Soap createEnvelope: @"get_single_question" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#get_single_question" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. Add Question Point */
	- (SoapRequest*) add_question_point: (id <SoapDelegate>) handler user_id: (NSString*) user_id question_id: (NSString*) question_id positive_negative: (NSString*) positive_negative
	{
		return [self add_question_point: handler action: nil user_id: user_id question_id: question_id positive_negative: positive_negative];
	}

	- (SoapRequest*) add_question_point: (id) _target action: (SEL) _action user_id: (NSString*) user_id question_id: (NSString*) question_id positive_negative: (NSString*) positive_negative
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: question_id forName: @"question_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: positive_negative forName: @"positive_negative"] ];
		NSString* _envelope = [Soap createEnvelope: @"add_question_point" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#add_question_point" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. Add Answer Point */
	- (SoapRequest*) add_answer_point: (id <SoapDelegate>) handler user_id: (NSString*) user_id answer_id: (NSString*) answer_id positive_negative: (NSString*) positive_negative
	{
		return [self add_answer_point: handler action: nil user_id: user_id answer_id: answer_id positive_negative: positive_negative];
	}

	- (SoapRequest*) add_answer_point: (id) _target action: (SEL) _action user_id: (NSString*) user_id answer_id: (NSString*) answer_id positive_negative: (NSString*) positive_negative
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: answer_id forName: @"answer_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: positive_negative forName: @"positive_negative"] ];
		NSString* _envelope = [Soap createEnvelope: @"add_answer_point" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#add_answer_point" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. Follow Question */
	- (SoapRequest*) follow_question: (id <SoapDelegate>) handler user_id: (NSString*) user_id question_id: (NSString*) question_id
	{
		return [self follow_question: handler action: nil user_id: user_id question_id: question_id];
	}

	- (SoapRequest*) follow_question: (id) _target action: (SEL) _action user_id: (NSString*) user_id question_id: (NSString*) question_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: question_id forName: @"question_id"] ];
		NSString* _envelope = [Soap createEnvelope: @"follow_question" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#follow_question" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. Questions Like */
	- (SoapRequest*) questionlike: (id <SoapDelegate>) handler user_id: (NSString*) user_id question_id: (NSString*) question_id
	{
		return [self questionlike: handler action: nil user_id: user_id question_id: question_id];
	}

	- (SoapRequest*) questionlike: (id) _target action: (SEL) _action user_id: (NSString*) user_id question_id: (NSString*) question_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: question_id forName: @"question_id"] ];
		NSString* _envelope = [Soap createEnvelope: @"questionlike" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#questionlike" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. Users Followers List */
- (SoapRequest*) user_followers_list: (id <SoapDelegate>) handler user_id: (NSString*) user_id limit:(NSString*)limit offset:(NSString*) offset
	{
		return [self user_followers_list: handler action: nil user_id: user_id limit:limit offset:offset];
	}

- (SoapRequest*) user_followers_list: (id) _target action: (SEL) _action user_id: (NSString*) user_id limit:(NSString*)limit offset:(NSString*) offset

		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
        [_params addObject: [[SoapParameter alloc] initWithValue: limit forName: @"limit"] ];
        [_params addObject: [[SoapParameter alloc] initWithValue: offset forName: @"offset"] ];
		NSString* _envelope = [Soap createEnvelope: @"user_followers_list" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#user_followers_list" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. App Followers List */
- (SoapRequest*) app_followers_list: (id <SoapDelegate>) handler user_id: (NSString*) user_id app_id: (NSString*) app_id limit:(NSString*)limit offset:(NSString*)offset
	{
		return [self app_followers_list: handler action: nil user_id: user_id app_id: app_id limit:limit offset:offset];
	}

	- (SoapRequest*) app_followers_list: (id) _target action: (SEL) _action user_id: (NSString*) user_id app_id: (NSString*) app_id limit:(NSString*)limit offset:(NSString*)offset
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: app_id forName: @"app_id"] ];
        [_params addObject: [[SoapParameter alloc] initWithValue: limit forName: @"limit"] ];
            [_params addObject: [[SoapParameter alloc] initWithValue: offset forName: @"offset"] ];
		NSString* _envelope = [Soap createEnvelope: @"app_followers_list" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#app_followers_list" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. Category Followers List */
- (SoapRequest*) category_followers_list: (id <SoapDelegate>) handler user_id: (NSString*) user_id category_id: (NSString*) category_id limit:(NSString*)limit offset:(NSString*)offset
	{
		return [self category_followers_list: handler action: nil user_id: user_id category_id: category_id limit:limit offset:offset];
	}

	- (SoapRequest*) category_followers_list: (id) _target action: (SEL) _action user_id: (NSString*) user_id category_id: (NSString*) category_id limit:(NSString*)limit offset:(NSString*)offset
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: category_id forName: @"category_id"] ];
        [_params addObject: [[SoapParameter alloc] initWithValue: limit forName: @"limit"] ];
        [_params addObject: [[SoapParameter alloc] initWithValue: offset forName: @"offset"] ];
		NSString* _envelope = [Soap createEnvelope: @"category_followers_list" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#category_followers_list" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. Developer Followers List */
	- (SoapRequest*) developer_followers_list: (id <SoapDelegate>) handler user_id: (NSString*) user_id developer_id: (NSString*) developer_id
	{
		return [self developer_followers_list: handler action: nil user_id: user_id developer_id: developer_id];
	}

	- (SoapRequest*) developer_followers_list: (id) _target action: (SEL) _action user_id: (NSString*) user_id developer_id: (NSString*) developer_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: developer_id forName: @"developer_id"] ];
		NSString* _envelope = [Soap createEnvelope: @"developer_followers_list" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#developer_followers_list" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. Question Followers List */
- (SoapRequest*) question_followers_list: (id <SoapDelegate>) handler user_id: (NSString*) user_id question_id: (NSString*) question_id limit:(NSString*)limit offset:(NSString*)offset
	{
		return [self question_followers_list: handler action: nil user_id: user_id question_id: question_id limit:limit offset:offset];
	}

	- (SoapRequest*) question_followers_list: (id) _target action: (SEL) _action user_id: (NSString*) user_id question_id: (NSString*) question_id limit:(NSString*)limit offset:(NSString*)offset
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: question_id forName: @"question_id"] ];
        [_params addObject: [[SoapParameter alloc] initWithValue: limit forName: @"limit"] ];
        [_params addObject: [[SoapParameter alloc] initWithValue: offset forName: @"offset"] ];
		NSString* _envelope = [Soap createEnvelope: @"question_followers_list" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#question_followers_list" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. Following List */
- (SoapRequest*) following_list: (id <SoapDelegate>) handler user_id: (NSString*) user_id limit:(NSString*)limit offset:(NSString*)offset
	{
		return [self following_list: handler action: nil user_id: user_id limit:limit offset:offset];
	}

- (SoapRequest*) following_list: (id) _target action: (SEL) _action user_id: (NSString*) user_id limit:(NSString*)limit offset:(NSString*)offset

		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
            [_params addObject: [[SoapParameter alloc] initWithValue: limit forName: @"limit"] ];
        [_params addObject: [[SoapParameter alloc] initWithValue: offset forName: @"offset"] ];
		NSString* _envelope = [Soap createEnvelope: @"following_list" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#following_list" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. User Profile Page */
	- (SoapRequest*) user_profile_page: (id <SoapDelegate>) handler user_id: (NSString*) user_id logged_user_id: (NSString*) logged_user_id
	{
		return [self user_profile_page: handler action: nil user_id: user_id logged_user_id: logged_user_id];
	}

	- (SoapRequest*) user_profile_page: (id) _target action: (SEL) _action user_id: (NSString*) user_id logged_user_id: (NSString*) logged_user_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: logged_user_id forName: @"logged_user_id"] ];
		NSString* _envelope = [Soap createEnvelope: @"user_profile_page" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#user_profile_page" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. Notification */
	- (SoapRequest*) notification: (id <SoapDelegate>) handler user_id: (NSString*) user_id limit: (NSString*) limit offset: (NSString*) offset
	{
		return [self notification: handler action: nil user_id: user_id limit: limit offset: offset];
	}

	- (SoapRequest*) notification: (id) _target action: (SEL) _action user_id: (NSString*) user_id limit: (NSString*) limit offset: (NSString*) offset
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: limit forName: @"limit"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: offset forName: @"offset"] ];
		NSString* _envelope = [Soap createEnvelope: @"notification" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#notification" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. Contact */
	- (SoapRequest*) contact: (id <SoapDelegate>) handler user_id: (NSString*) user_id email: (NSString*) email
	{
		return [self contact: handler action: nil user_id: user_id email: email];
	}

	- (SoapRequest*) contact: (id) _target action: (SEL) _action user_id: (NSString*) user_id email: (NSString*) email
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: email forName: @"email"] ];
		NSString* _envelope = [Soap createEnvelope: @"contact" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#Contact" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. Facebook Find Friends */
	- (SoapRequest*) facebook_find_friends: (id <SoapDelegate>) handler user_id: (NSString*) user_id facebook_user_id: (NSString*) facebook_user_id
	{
		return [self facebook_find_friends: handler action: nil user_id: user_id facebook_user_id: facebook_user_id];
	}

	- (SoapRequest*) facebook_find_friends: (id) _target action: (SEL) _action user_id: (NSString*) user_id facebook_user_id: (NSString*) facebook_user_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		[_params addObject: [[SoapParameter alloc] initWithValue: facebook_user_id forName: @"facebook_user_id"] ];
		NSString* _envelope = [Soap createEnvelope: @"facebook_find_friends" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#facebook_find_friends" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. Get User Interest */
	- (SoapRequest*) get_user_interest: (id <SoapDelegate>) handler user_id: (NSString*) user_id
	{
		return [self get_user_interest: handler action: nil user_id: user_id];
	}

	- (SoapRequest*) get_user_interest: (id) _target action: (SEL) _action user_id: (NSString*) user_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		NSString* _envelope = [Soap createEnvelope: @"get_user_interest" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#get_user_interest" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. Get Follow Question */
	- (SoapRequest*) get_follow_question: (id <SoapDelegate>) handler user_id: (NSString*) user_id limit: (NSString*) limit offset: (NSString*) offset
	{
		return [self get_follow_question: handler action: nil user_id: user_id limit:limit offset:offset] ;
	}

	- (SoapRequest*) get_follow_question: (id) _target action: (SEL) _action user_id: (NSString*) user_id limit: (NSString*) limit offset: (NSString*) offset
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
            [_params addObject: [[SoapParameter alloc] initWithValue: limit forName: @"limit"] ];
            [_params addObject: [[SoapParameter alloc] initWithValue: offset forName: @"offset"] ];
		NSString* _envelope = [Soap createEnvelope: @"get_follow_question" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#get_follow_question" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. Get Follow Apps */
	- (SoapRequest*) get_follow_apps: (id <SoapDelegate>) handler user_id: (NSString*) user_id
	{
		return [self get_follow_apps: handler action: nil user_id: user_id];
	}

	- (SoapRequest*) get_follow_apps: (id) _target action: (SEL) _action user_id: (NSString*) user_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
		NSString* _envelope = [Soap createEnvelope: @"get_follow_apps" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#get_follow_apps" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

	/* Returns AUVArray*. Credit Transactions */
- (SoapRequest*) credit_transactions: (id <SoapDelegate>) handler user_id: (NSString*) user_id limit:(NSString*)limit offset:(NSString*)offset
	{
		return [self credit_transactions: handler action: nil user_id: user_id limit:limit offset:offset];
	}

- (SoapRequest*) credit_transactions: (id) _target action: (SEL) _action user_id: (NSString*) user_id limit:(NSString*)limit offset:(NSString*)offset

		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
        [_params addObject: [[SoapParameter alloc] initWithValue: limit forName: @"limit"] ];
        [_params addObject: [[SoapParameter alloc] initWithValue: offset forName: @"offset"] ];
		NSString* _envelope = [Soap createEnvelope: @"credit_transactions" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#credit_transactions" postData: _envelope deserializeTo: [AUVArray alloc] ];
		[_request send];
		return _request;
	}

   /*Returns AUVArray. Get Myapp Detail*/

    - (SoapRequest*) get_myapps_details: (id <SoapDelegate>) handler user_id: (NSString*) user_id
    {
    return [self get_myapps_details: handler action: nil user_id: user_id];
    }

    - (SoapRequest*) get_myapps_details: (id) _target action: (SEL) _action user_id: (NSString*) user_id
    {
        NSMutableArray* _params = [NSMutableArray array];
    
        [_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
        NSString* _envelope = [Soap createEnvelope: @"get_myapps_details" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
        SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#get_myapps_details" postData: _envelope deserializeTo: [AUVArray alloc] ];
        [_request send];
        return _request;
    }


    /*Returns AUVArray. Get category page*/

- (SoapRequest*) category_page: (id <SoapDelegate>) handler user_id: (NSString*) user_id category_id:(NSString*) category_id
    {
        return [self category_page: handler action: nil user_id: user_id category_id:category_id];
    }

- (SoapRequest*) category_page: (id) _target action: (SEL) _action user_id: (NSString*) user_id category_id:(NSString*)category_id
    {
        NSMutableArray* _params = [NSMutableArray array];
    
        [_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
        [_params addObject:[[SoapParameter alloc] initWithValue: category_id forName: @"category_id"] ];
        
        NSString* _envelope = [Soap createEnvelope: @"category_page" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
        SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#category_page" postData: _envelope deserializeTo: [AUVArray alloc] ];
        [_request send];
        return _request;
    }

/* Returns AUVArray*. Deals 
- (SoapRequest*) deals: (id <SoapDelegate>) handler
{
    return [self deals: handler action: nil];
}

- (SoapRequest*) deals: (id) _target action: (SEL) _action
{
    NSMutableArray* _params = [NSMutableArray array];
    
    NSString* _envelope = [Soap createEnvelope: @"deals" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#Deals" postData: _envelope deserializeTo: [AUVArray alloc] ];
    [_request send];
    return _request;
}
*/

/* Returns AUVArray*. Apps Recommend */
- (SoapRequest*) apps_recommend: (id <SoapDelegate>) handler user_id: (NSString*) user_id limit: (NSString*) limit offset: (NSString*) offset
{
    return [self apps_recommend: handler action: nil user_id: user_id limit: limit offset: offset];
}

- (SoapRequest*) apps_recommend: (id) _target action: (SEL) _action user_id: (NSString*) user_id limit: (NSString*) limit offset: (NSString*) offset
{
    NSMutableArray* _params = [NSMutableArray array];
    
    [_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"]];
    [_params addObject: [[SoapParameter alloc] initWithValue: limit forName: @"limit"]];
    [_params addObject: [[SoapParameter alloc] initWithValue: offset forName: @"offset"]];
    NSString* _envelope = [Soap createEnvelope: @"apps_recommend" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#Apps Recommend" postData: _envelope deserializeTo: [AUVArray alloc]];
    [_request send];
    return _request;
}

/* Returns AUVArray*. Suggest */
- (SoapRequest*) suggest: (id <SoapDelegate>) handler user_id: (NSString*) user_id ref_user_id:(NSString*) ref_user_id a_id: (NSString*) a_id type:(NSString*) type
{
    return [self suggest: handler action: nil user_id: user_id ref_user_id:ref_user_id a_id: a_id type:type];
}

- (SoapRequest*) suggest: (id) _target action: (SEL) _action user_id: (NSString*) user_id ref_user_id: (NSString*) ref_user_id a_id: (NSString*) a_id type:(NSString*) type
{
    NSMutableArray* _params = [NSMutableArray array];
    
    [_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"]];
    [_params addObject:[[SoapParameter alloc]initWithValue:ref_user_id forName:@"ref_user_id"]];
    [_params addObject: [[SoapParameter alloc] initWithValue: a_id forName: @"a_id"]];
    [_params addObject: [[SoapParameter alloc] initWithValue: type forName: @"type"]];
    
    NSString* _envelope = [Soap createEnvelope: @"suggest" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#Suggest" postData: _envelope deserializeTo: [AUVArray alloc]];
    [_request send];
    return _request;
}

/* Returns AUVArray*. App Share */
- (SoapRequest*) appshare: (id <SoapDelegate>) handler user_id: (NSString*) user_id app_id: (NSString*) app_id
{
    return [self appshare: handler action: nil user_id: user_id app_id: app_id];
}

- (SoapRequest*) appshare: (id) _target action: (SEL) _action user_id: (NSString*) user_id app_id: (NSString*) app_id
{
    NSMutableArray* _params = [NSMutableArray array];
    
    [_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"]];
    [_params addObject: [[SoapParameter alloc] initWithValue: app_id forName: @"app_id"]];
    NSString* _envelope = [Soap createEnvelope: @"appshare" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#app share" postData: _envelope deserializeTo: [AUVArray alloc]];
    [_request send];
    return _request;
}

/*Return AUVArray*. Developer page*/
 
 
 - (SoapRequest*) developer_page: (id <SoapDelegate>) handler user_id: (NSString*) user_id developer_id: (NSString*) developer_id
 {
 return [self developer_page: handler action: nil user_id: user_id developer_id: developer_id];
 }
 
 - (SoapRequest*) developer_page: (id) _target action: (SEL) _action user_id: (NSString*) user_id developer_id: (NSString*) developer_id
 {
 NSMutableArray* _params = [NSMutableArray array];
 
 [_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"]];
 [_params addObject: [[SoapParameter alloc] initWithValue: developer_id forName: @"developer_id"]];
 NSString* _envelope = [Soap createEnvelope: @"appshare" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
 SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#app share" postData: _envelope deserializeTo: [AUVArray alloc]];
 [_request send];
 return _request;
 }

/* Return AUVArray Wall_Question_Share*/


- (SoapRequest*) wall_question_share: (id <SoapDelegate>) handler user_id: (NSString*) user_id question_id: (NSString*) question_id
{
    return [self wall_question_share: handler action: nil user_id: user_id question_id: question_id];
}

- (SoapRequest*) wall_question_share: (id) _target action: (SEL) _action user_id: (NSString*) user_id question_id: (NSString*) question_id
{
    NSMutableArray* _params = [NSMutableArray array];
    
    [_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"]];
    [_params addObject: [[SoapParameter alloc] initWithValue: question_id forName: @"question_id"]];
    NSString* _envelope = [Soap createEnvelope: @"wall_question_share" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#wall_question_share" postData: _envelope deserializeTo: [AUVArray alloc]];
    [_request send];
    return _request;
}


/* Return AUVArray Skip_Wall*/


- (SoapRequest*) skip_wall: (id <SoapDelegate>) handler unique_id: (NSString*) unique_id user_id: (NSString*) user_id
{
    return [self skip_wall: handler action: nil unique_id: unique_id user_id: user_id];
}

- (SoapRequest*) skip_wall: (id) _target action: (SEL) _action unique_id: (NSString*) unique_id user_id: (NSString*) user_id
{
    NSMutableArray* _params = [NSMutableArray array];
    
    [_params addObject: [[SoapParameter alloc] initWithValue: unique_id forName: @"unique_id"]];
    [_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"]];
    NSString* _envelope = [Soap createEnvelope: @"skip_wall" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#skip_wall" postData: _envelope deserializeTo: [AUVArray alloc]];
    [_request send];
    return _request;
}


/* Returns AUVArray*. FAQ */
- (SoapRequest*) faq: (id <SoapDelegate>) handler
{
    return [self faq: handler action: nil];
}

- (SoapRequest*) faq: (id) _target action: (SEL) _action
{
    NSMutableArray* _params = [NSMutableArray array];
    
    NSString* _envelope = [Soap createEnvelope: @"faq" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#faq" postData: _envelope deserializeTo: [AUVArray alloc] ];
    [_request send];
    return _request;
}

/* Returns AUVArray*. Privacy Policy */
- (SoapRequest*) privacy_policy: (id <SoapDelegate>) handler
{
    return [self privacy_policy: handler action: nil];
}

- (SoapRequest*) privacy_policy: (id) _target action: (SEL) _action
{
    NSMutableArray* _params = [NSMutableArray array];
    
    NSString* _envelope = [Soap createEnvelope: @"privacy_policy" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#privacy_policy" postData: _envelope deserializeTo: [AUVArray alloc] ];
    [_request send];
    return _request;
}

/* Returns AUVArray*. Terms of service */
- (SoapRequest*) terms_of_service: (id <SoapDelegate>) handler
{
    return [self terms_of_service: handler action: nil];
}

- (SoapRequest*) terms_of_service: (id) _target action: (SEL) _action
{
    NSMutableArray* _params = [NSMutableArray array];
    
    NSString* _envelope = [Soap createEnvelope: @"terms_of_service" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#terms_of_service" postData: _envelope deserializeTo: [AUVArray alloc] ];
    [_request send];
    return _request;
}


/* Returns AUVArray*. Trending Apps */
- (SoapRequest*) tread_apps: (id <SoapDelegate>) handler
{
    return [self tread_apps: handler action: nil ];
}

- (SoapRequest*) tread_apps: (id) _target action: (SEL) _action 
{
    NSMutableArray* _params = [NSMutableArray array];
    
     
    
    NSString* _envelope = [Soap createEnvelope: @"tread_apps" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#tread_apps" postData: _envelope deserializeTo: [AUVArray alloc] ];
    [_request send];
    return _request;
}


/* Return AUVArray Fb linked account*/


- (SoapRequest*) fb_linked_account: (id <SoapDelegate>) handler user_id: (NSString*) user_id facebook_user_id: (NSString*) facebook_user_id access_key:(NSString*)access_key
{
    return [self fb_linked_account: handler action: nil user_id: user_id facebook_user_id: facebook_user_id access_key:access_key];
}

- (SoapRequest*) fb_linked_account: (id) _target action: (SEL) _action user_id: (NSString*) user_id facebook_user_id: (NSString*) facebook_user_id access_key:(NSString*)access_key
{
    NSMutableArray* _params = [NSMutableArray array];
    
    [_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"]];
    [_params addObject: [[SoapParameter alloc] initWithValue: facebook_user_id forName: @"facebook_user_id"]];
    [_params addObject: [[SoapParameter alloc] initWithValue: access_key forName: @"access_key"]];
    NSString* _envelope = [Soap createEnvelope: @"fb_linked_account" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#fb_linked_account" postData: _envelope deserializeTo: [AUVArray alloc]];
    [_request send];
    return _request;
}


/* Return AUVArray ask user suggestion*/


- (SoapRequest*) ask_user_suggestion: (id <SoapDelegate>) handler user_id: (NSString*) user_id question_id: (NSString*) question_id 
{
    return [self ask_user_suggestion: handler action: nil user_id: user_id question_id: question_id];
}

- (SoapRequest*) ask_user_suggestion: (id) _target action: (SEL) _action user_id: (NSString*) user_id question_id: (NSString*) question_id 
{
    NSMutableArray* _params = [NSMutableArray array];
    
    [_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"]];
    [_params addObject: [[SoapParameter alloc] initWithValue: question_id forName: @"question_id"]];
    
    NSString* _envelope = [Soap createEnvelope: @"ask_user_suggestion" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#ask_user_suggestion" postData: _envelope deserializeTo: [AUVArray alloc]];
    [_request send];
    return _request;
}



/* Returns AUVArray*. ask */
- (SoapRequest*) ask: (id <SoapDelegate>) handler user_id: (NSString*) user_id ref_user_id:(NSString*) ref_user_id question_id: (NSString*) question_id
{
    return [self ask: handler action: nil user_id: user_id ref_user_id:ref_user_id question_id: question_id];
}

- (SoapRequest*) ask: (id) _target action: (SEL) _action user_id: (NSString*) user_id ref_user_id: (NSString*) ref_user_id question_id: (NSString*) question_id
{
    NSMutableArray* _params = [NSMutableArray array];
    
    [_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"]];
    [_params addObject:[[SoapParameter alloc]initWithValue:ref_user_id forName:@"ref_user_id"]];
    [_params addObject: [[SoapParameter alloc] initWithValue: question_id forName: @"question_id"]];
   
    
    NSString* _envelope = [Soap createEnvelope: @"ask" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#ask" postData: _envelope deserializeTo: [AUVArray alloc]];
    [_request send];
    return _request;
}

/* Returns AUVArray*. To get user answer  */
- (SoapRequest*) get_user_answer: (id <SoapDelegate>) handler user_id: (NSString*) user_id limit: (NSString*) limit offset: (NSString*) offset
{
    return [self get_user_answer: handler action: nil user_id: user_id limit: limit offset: offset];
}

- (SoapRequest*) get_user_answer: (id) _target action: (SEL) _action user_id: (NSString*) user_id limit: (NSString*) limit offset: (NSString*) offset
{
    NSMutableArray* _params = [NSMutableArray array];
    
    [_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
    [_params addObject: [[SoapParameter alloc] initWithValue: limit forName: @"limit"] ];
    [_params addObject: [[SoapParameter alloc] initWithValue: offset forName: @"offset"] ];
    NSString* _envelope = [Soap createEnvelope: @"get_user_answer" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#get_user_answer" postData: _envelope deserializeTo: [AUVArray alloc] ];
    [_request send];
    return _request;
}


/* Returns AUVArray*. To app dislike  */
- (SoapRequest*) appdislike: (id <SoapDelegate>) handler user_id: (NSString*) user_id app_id: (NSString*) app_id
{
    return [self appdislike: handler action: nil user_id: user_id app_id: app_id];
}

- (SoapRequest*) appdislike: (id) _target action: (SEL) _action user_id: (NSString*) user_id app_id: (NSString*) app_id
{
    NSMutableArray* _params = [NSMutableArray array];
    
    [_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"]];
    [_params addObject: [[SoapParameter alloc] initWithValue: app_id forName: @"app_id"]];
   
    NSString* _envelope = [Soap createEnvelope: @"appdislike" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#appdislike" postData: _envelope deserializeTo: [AUVArray alloc] ];
    [_request send];
    return _request;
}

/* Returns AUVArray*. notification count  */

- (SoapRequest*) notification_count: (id <SoapDelegate>) handler user_id: (NSString*) user_id {
    return [self notification_count: handler action: nil user_id: user_id ];
}

- (SoapRequest*) notification_count: (id) _target action: (SEL) _action user_id: (NSString*) user_id 
{
    NSMutableArray* _params = [NSMutableArray array];
    
    [_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"]];
  
    
    NSString* _envelope = [Soap createEnvelope: @"notification_count" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#notification_count" postData: _envelope deserializeTo: [AUVArray alloc] ];
    [_request send];
    return _request;
}


/* Returns AUVArray*. get review data  */

- (SoapRequest*) get_review_data: (id <SoapDelegate>) handler review_id: (NSString*) review_id {
    return [self get_review_data: handler action: nil review_id: review_id ];
}

- (SoapRequest*) get_review_data: (id) _target action: (SEL) _action review_id: (NSString*) review_id
{
    NSMutableArray* _params = [NSMutableArray array];
    
    [_params addObject: [[SoapParameter alloc] initWithValue: review_id forName: @"review_id"]];
    
    
    NSString* _envelope = [Soap createEnvelope: @"get_review_data" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#get_review_data" postData: _envelope deserializeTo: [AUVArray alloc] ];
    [_request send];
    return _request;
}

/* Returns AUVArray*. fb linked account status  */

- (SoapRequest*) fb_linked_account_status: (id <SoapDelegate>) handler user_id: (NSString*) user_id {
    return [self fb_linked_account_status: handler action: nil user_id: user_id ];
}

- (SoapRequest*) fb_linked_account_status: (id) _target action: (SEL) _action user_id: (NSString*) user_id
{
    NSMutableArray* _params = [NSMutableArray array];
    
    [_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"]];
    
    
    NSString* _envelope = [Soap createEnvelope: @"fb_linked_account_status" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#fb_linked_account_status" postData: _envelope deserializeTo: [AUVArray alloc] ];
    [_request send];
    return _request;
}


/* Returns AUVArray*. Fb unLink Account */
- (SoapRequest*) fb_unlink_account: (id <SoapDelegate>) handler user_id: (NSString*) user_id
{
    return [self fb_unlink_account: handler action: nil user_id: user_id];

}

- (SoapRequest*) fb_unlink_account: (id) _target action: (SEL) _action user_id: (NSString*) user_id
{
    NSMutableArray* _params = [NSMutableArray array];
    
    [_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"]];
    
    
    NSString* _envelope = [Soap createEnvelope: @"fb_unlink_account" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#fb_unlink_account" postData: _envelope deserializeTo: [AUVArray alloc] ];
    [_request send];
    return _request;

}

/* Returns AUVArray*. Fb unLink Account */
- (SoapRequest*)update_DeviceToken:(id<SoapDelegate>)handler user_id:(NSString *)user_id token:(NSString *)token
{
    return [self update_DeviceToken:handler action:nil user_id:user_id token:token];
    
}

- (SoapRequest*) update_DeviceToken:(id)target action:(SEL)action user_id:(NSString *)user_id token:(NSString *)token
{
    NSMutableArray* _params = [NSMutableArray array];
    
    [_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"]];
     [_params addObject: [[SoapParameter alloc] initWithValue: token forName: @"device_token"]];
    
    
    NSString* _envelope = [Soap createEnvelope: @"update_device_token" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction: @"urn:webservicewsdl#update_device_token" postData: _envelope deserializeTo: [AUVArray alloc] ];
    [_request send];
    return _request;
    
}

/* Returns AUVArray*. Fb unLink Account 
- (SoapRequest*)deviceToken:(id<SoapDelegate>)handler  token:(NSString *)token
{
    return [self deviceToken:handler action:nil token:token];
    
}

- (SoapRequest*) deviceToken:(id)target action:(SEL)action  token:(NSString *)token
{
    NSMutableArray* _params = [NSMutableArray array];
    
    [_params addObject: [[SoapParameter alloc] initWithValue: token forName: @"device_token"]];
    
    
    NSString* _envelope = [Soap createEnvelope: @"device_token" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction: @"urn:webservicewsdl#device_token" postData: _envelope deserializeTo: [AUVArray alloc] ];
    [_request send];
    return _request;
    
}
*/


/* Returns AUVArray*. Fb unLink Account */
-(SoapRequest*)update_PushNotification:(id<SoapDelegate>)handler user_id:(NSString *)user_id notification:(NSString *)notification
{
    return [self update_PushNotification:handler action:nil user_id:user_id notification:notification];
    
}

- (SoapRequest*) update_PushNotification:(id)target action:(SEL)action user_id:(NSString *)user_id notification:(NSString *)notification
{
    NSMutableArray* _params = [NSMutableArray array];
    
    [_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"]];
    [_params addObject: [[SoapParameter alloc] initWithValue: notification forName: @"notification"]];
    
    
    NSString* _envelope = [Soap createEnvelope: @"update_push_notification" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction: @"urn:webservicewsdl#update_push_notification" postData: _envelope deserializeTo: [AUVArray alloc] ];
    [_request send];
    return _request;
    
}

/* App Snatch Webservices */


- (SoapRequest*) deals: (id <SoapDelegate>) handler
{
    return [self deals: handler action: nil];
}

- (SoapRequest*) deals: (id) _target action: (SEL) _action
{
    NSMutableArray* _params = [NSMutableArray array];
    
    NSString* _envelope = [Soap createEnvelope: @"deals" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#deals" postData: _envelope deserializeTo: [AUVArray alloc] ];
    [_request send];
    return _request;
}

/* App Snatch home page Webservices */


- (SoapRequest*) homescreen: (id <SoapDelegate>) handler
{
    return [self deals: handler action: nil];
}

- (SoapRequest*) homescreen: (id) _target action: (SEL) _action
{
    NSMutableArray* _params = [NSMutableArray array];
    
    NSString* _envelope = [Soap createEnvelope: @"homescreen" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#homescreen" postData: _envelope deserializeTo: [AUVArray alloc] ];
    [_request send];
    return _request;
}


/*Device token Webservices*/

- (SoapRequest*)deviceToken:(id<SoapDelegate>)handler  token:(NSString *)token
{
    return [self deviceToken:handler action:nil token:token];
    
}

- (SoapRequest*) deviceToken:(id)target action:(SEL)action  token:(NSString *)token
{
    NSMutableArray* _params = [NSMutableArray array];
    
    [_params addObject: [[SoapParameter alloc] initWithValue: token forName: @"device_token"]];
    
    
    NSString* _envelope = [Soap createEnvelope: @"device_token" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction: @"urn:webservicewsdl#device_token" postData: _envelope deserializeTo: [AUVArray alloc] ];
    [_request send];
    return _request;
    
}
/* Return AUVArray Forgot_Password*/


- (SoapRequest*) forgot_password: (id <SoapDelegate>) handler username: (NSString*) username {
    return [self forgot_password: handler action: nil username: username];
}

- (SoapRequest*) forgot_password: (id) _target action: (SEL) _action username: (NSString*) username
{
    NSMutableArray* _params = [NSMutableArray array];
    
    [_params addObject: [[SoapParameter alloc] initWithValue: username forName: @"username"]];
    
    NSString* _envelope = [Soap createEnvelope: @"forgot_password" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#forgot_password" postData: _envelope deserializeTo: [AUVArray alloc]];
    [_request send];
    return _request;
}

/* Returns AUVArray*. Facebook User Registration */
- (SoapRequest*) fb_registration: (id <SoapDelegate>) handler facebook_user_id: (NSString*) facebook_user_id access_key: (NSString*) access_key firstname: (NSString*) firstname lastname: (NSString*) lastname username: (NSString*) username email_id: (NSString*) email_id timezone: (NSString*) timezone
{
    return [self fb_registration: handler action: nil facebook_user_id: facebook_user_id access_key: access_key firstname: firstname lastname: lastname username: username email_id: email_id timezone: timezone];
}

- (SoapRequest*) fb_registration: (id) _target action: (SEL) _action facebook_user_id: (NSString*) facebook_user_id access_key: (NSString*) access_key firstname: (NSString*) firstname lastname: (NSString*) lastname username: (NSString*) username email_id: (NSString*) email_id timezone: (NSString*) timezone
{
    NSMutableArray* _params = [NSMutableArray array];
    
    [_params addObject: [[SoapParameter alloc] initWithValue: facebook_user_id forName: @"facebook_user_id"]];
    [_params addObject: [[SoapParameter alloc] initWithValue: access_key forName: @"access_key"] ];
    [_params addObject: [[SoapParameter alloc] initWithValue: firstname forName: @"firstname"] ];
    [_params addObject: [[SoapParameter alloc] initWithValue: lastname forName: @"lastname"] ];
    [_params addObject: [[SoapParameter alloc] initWithValue: username forName: @"username"] ];
    [_params addObject: [[SoapParameter alloc] initWithValue: email_id forName: @"email_id"] ];
    [_params addObject: [[SoapParameter alloc] initWithValue: timezone forName: @"timezone"] ];
    NSString* _envelope = [Soap createEnvelope: @"fb_registration" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#fb_register" postData: _envelope deserializeTo: [AUVArray alloc]];
    [_request send];
    return _request;
}

/* Returns AUVArray*.Login details  */
- (SoapRequest*) login: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password
{
    return [self login: handler action: nil username: username password: password];
}

- (SoapRequest*) login: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password
{
    NSMutableArray* _params = [NSMutableArray array];
    
    [_params addObject: [[SoapParameter alloc] initWithValue: username forName: @"username"]];
    [_params addObject: [[SoapParameter alloc] initWithValue: password forName: @"password"] ];
    NSString* _envelope = [Soap createEnvelope: @"login" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#login" postData: _envelope deserializeTo: [AUVArray alloc]];
    [_request send];
    return _request;
}


/* Returns AUVArray*. User Registration */
- (SoapRequest*) register: (id <SoapDelegate>) handler   password: (NSString*) password email_id: (NSString*) email_id
{
    return [self register: handler action: nil  email_id: email_id  password: password ];
}

- (SoapRequest*) register: (id) _target action: (SEL) _action  email_id: (NSString*) email_id password: (NSString*) password
{
    NSMutableArray* _params = [NSMutableArray array];
  //  [_params addObject:[[SoapParameter alloc] initWithValue:fname forName:@"firstname"]];
    [_params addObject: [[SoapParameter alloc] initWithValue: email_id forName: @"email_id"] ];
    [_params addObject: [[SoapParameter alloc] initWithValue: password forName: @"password"] ];
    NSString* _envelope = [Soap createEnvelope: @"register" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#register" postData: _envelope deserializeTo: [AUVArray alloc] ];
    [_request send];
    return _request;
}
/* Returns AUVArray*.Snatch it details  */
- (SoapRequest*) snatchView: (id <SoapDelegate>) handler id: (NSString*)buttonid user_id: (NSString*)userId
{
    return [self snatchView: handler action:nil id: buttonid user_id: userId];
}

- (SoapRequest*) snatchView: (id) _target action: (SEL) _action id: (NSString*)buttonid user_id: (NSString*)userId
{
    NSMutableArray* _params = [NSMutableArray array];
    
    [_params addObject: [[SoapParameter alloc] initWithValue: buttonid forName: @"id"]];
    [_params addObject: [[SoapParameter alloc] initWithValue: userId forName: @"user_id"] ];
    NSString* _envelope = [Soap createEnvelope: @"snatch" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @" urn:webservicewsdl#snatch" postData: _envelope deserializeTo: [AUVArray alloc]];
    [_request send];
    return _request;
}

/* Returns AUVArray*. To get a App details from Hypertable. */
- (SoapRequest*) get_appdetails: (id <SoapDelegate>) handler appid: (NSString*) appid user_id: (NSString*) user_id
{
    return [self get_appdetails: handler action: nil appid: appid user_id: user_id];
}

- (SoapRequest*) get_appdetails: (id) _target action: (SEL) _action appid: (NSString*) appid user_id: (NSString*) user_id
{
    NSMutableArray* _params = [NSMutableArray array];
    
    [_params addObject: [[SoapParameter alloc] initWithValue: appid forName: @"appid"]];
    [_params addObject: [[SoapParameter alloc] initWithValue: user_id forName: @"user_id"] ];
    NSString* _envelope = [Soap createEnvelope: @"get_appdetails" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
    SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"urn:webservicewsdl#get_appdetails" postData: _envelope deserializeTo: [AUVArray alloc]];
    [_request send];
    return _request;
}




@end
	